name: create release action
description: Creates the tag and GitHub release, using conventional commits.

inputs:
  github_token:
    description: Github token
    required: true
  vault_token:
    description: The vault token
    required: true
  vault_addr:
    description: The vault addr
    required: true
  sonar_token:
    description: The Sonar Token to use
    required: true
  sonar_host_url:
    description: The Sonar host to use
    required: true
  artifactory_user:
    description: The artifactory user
    required: true
  artifactory_token:
    description: The artifactory password
    required: true
  gradle_check_and_submit_command:
    description: The gradle tasks to run in addition to ./gradlew check build sonarqube
    required: false
    default: ./gradlew check build integrationTest sonarqube

runs:
  using: composite
  steps:
    - name: Get temporary AWS Credentials
      env:
        ROLE_NAME: armory-cloud-github-actions-role
        VAULT_ADDR: ${{ inputs.vault_token }}
        VAULT_TOKEN: ${{ inputs.vault_addr }}
        AWS_REGION: us-west-2
        AWS_DEFAULT_REGION: us-west-2
      run: |
        wget --quiet https://releases.hashicorp.com/vault/1.5.5/vault_1.5.5_linux_amd64.zip
        unzip vault_1.5.5_linux_amd64.zip
        chmod +x ./vault
        export CREDS=$(./vault write -format json aws/dev/sts/${ROLE_NAME} ttl=60m || exit 1)
        AWS_ACCESS_KEY_ID=$(echo $CREDS | jq -r ".data.access_key")
        AWS_SECRET_ACCESS_KEY=$(echo $CREDS | jq -r ".data.secret_key")
        AWS_SESSION_TOKEN=$(echo $CREDS | jq -r ".data.security_token")
        echo "::add-mask::${AWS_ACCESS_KEY_ID}"
        echo "::add-mask::${AWS_SECRET_ACCESS_KEY}"
        echo "::add-mask::${AWS_SESSION_TOKEN}"
        echo "AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}" >> $GITHUB_ENV
        echo "AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}" >> $GITHUB_ENV
        echo "AWS_SESSION_TOKEN=${AWS_SESSION_TOKEN}" >> $GITHUB_ENV
      shell: bash

    - uses: actions/checkout@v2

    - name: Fetch full history
      run: git fetch --prune --tags --unshallow
      shell: bash

    - name: Bump version and push tag
      id: push_tag
      uses: mathieudutour/github-tag-action@v6.0
      with:
        github_token: ${{ inputs.github_token }}
        default_bump: patch
        release_branches: master

    - name: Fetch Refresh
      run: git fetch --prune --tags
      shell: bash

    - uses: armory-io/infra-github-actions/gradle-analyze-and-submit-to-sonar@master
      with:
        github_token: '${{ inputs.github_token }}'
        sonar_token: '${{ inputs.sonar_token }}'
        sonar_host_url: '${{ inputs.sonar_host_url }}'
        artifactory_user: '${{ inputs.artifactory_user }}'
        artifactory_token: '${{ inputs.artifactory_token }}'
        gradle_check_and_submit_command: '${{ inputs.gradle_check_and_submit_command }}'

    - name: Generate Changelog
      id: changelog
      env:
        NEW_TAG: ${{ steps.push_tag.outputs.new_tag }}
        PREVIOUS_TAG: ${{ steps.push_tag.outputs.previous_tag }}
      run: |
        set mode -x
        export CHANGELOG=`git log $NEW_TAG...$PREVIOUS_TAG --oneline`
        echo "CHANGELOG=$CHANGELOG"
        CHANGELOG="${CHANGELOG//$'%'/%25}"
        CHANGELOG="${CHANGELOG//$'\n'/%0A}"
        CHANGELOG="${CHANGELOG//$'\r'/%0D}"
        echo ::set-output name=CHANGELOG::$(echo -e "${CHANGELOG}")
      shell: bash

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}
      with:
        tag_name: ${{ steps.push_tag.outputs.new_tag }}
        release_name: ${{ github.event.repository.name }} ${{ steps.push_tag.outputs.new_version }}
        body: |
          ${{ steps.changelog.outputs.CHANGELOG }}
        draft: false
        prerelease: false