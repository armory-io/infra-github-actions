name: deploy
description: deploys baked manifest with Armory Deployments

inputs:
  github_token:
    description: Github token
    required: true
  application_name:
    description: The application that is getting deployed
    required: true
  armory_cloud_client_id:
    description: The client id from armory cloud client credentials
    required: true
  armory_cloud_client_secret:
    description: The client secret from armory cloud client credentials
    required: true
  image_tag:
    description: The image tag to deploy
    required: true
  values-path:
    description: path to values files for helm chart
    required: false
    default: infrastructure/helm

runs:
  using: composite
  steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ inputs.image_tag }}

    - uses: actions/checkout@v2
      with:
        repository: armory-io/infra-jvm-service-helm-chart
        ref: master
        token: ${{ inputs.github_token }}
        path: generate-manifest-action

    - run: mkdir -p ./build/{manifests,armory}
      shell: bash

    - name: generate staging manfifests
      uses: ./generate-manifest-action
      with:
        values-path: ${{ inputs.values-path }}
        environment: staging
        imageTag: ${{ inputs.image_tag }}
    - name: generate prod manfifests
      uses: ./generate-manifest-action
      with:
        values-path: ${{ inputs.values-path }}
        environment: prod
        imageTag: ${{ inputs.image_tag }}

    - name: Upload Manifests
      uses: actions/upload-artifact@v2
      with:
        name: manifests
        path: build/manifests

    - name: Generate Deployment Manfiest
      run: |
        mkdir -p build/armory
        cat << EOF > build/armory/deployment.yaml
        version: v1
        kind: kubernetes

        targets:
          staging:
            account: armory-hosted-services-prod-agent
            namespace: armory-hosted-services-staging
            strategy: staging-strategy
          prod:
            account: armory-hosted-services-prod-agent
            namespace: armory-hosted-services-prod
            strategy: prod-strategy
            constraints:
              dependsOn: ["staging"]

        manifests:
          - path: /build/manifests/staging-manifests.yaml
            targets: ["staging"]
          - path: /build/manifests/prod-manifests.yaml
            targets: ["prod"]
        webhooks: 
          - name: Run API Tests Against Production
            method: POST
            uriTemplate: https://api.github.com/repos/armory-io/infra-armory-cloud-api-tests/actions/workflows/armory-cloud-api-tests.yaml/dispatches
            networkMode: direct
            headers:
              - key: Authorization
                value: token {{secrets.github_token}}
              - key: Content-Type
                value: application/json
            bodyTemplate:
              inline:  >-
                {
                "ref": "main",
                "inputs": {
                    "environment": "prod",
                    "fromArmory": "true",
                    "callbackUri": "{{armory.callbackUri}}/callback"
                    }
                }
            retryCount: 3
          - name: Run API Tests Against Staging
            method: POST
            uriTemplate: https://api.github.com/repos/armory-io/infra-armory-cloud-api-tests/actions/workflows/armory-cloud-api-tests.yaml/dispatches
            networkMode: direct
            headers:
              - key: Authorization
                value: token {{secrets.github_token}}
              - key: Content-Type
                value: application/json
            bodyTemplate:
              inline:  >-
                {
                "ref": "main",
                "inputs": {
                    "environment": "staging",
                    "fromArmory": "true",
                    "callbackUri": "{{armory.callbackUri}}/callback"
                    }
                }
            retryCount: 3
        strategies:
          staging-strategy:
            canary:
              steps:
                - setWeight:
                    weight: 100
                - pause:
                    untilApproved: true
          prod-strategy:
            canary:
              steps:
                - setWeight:
                    weight: 33
                - pause:
                    untilApproved: true
                - setWeight:
                    weight: 100
        EOF
      shell: bash

    - name: Start Armory Deployment
      uses: armory/cli-deploy-action@dev
      with:
        applicationName: ${{ inputs.application_name }}
        clientId: ${{ inputs.armory_cloud_client_id }}
        clientSecret: ${{ inputs.armory_cloud_client_secret }}
        path-to-file: /build/armory/deployment.yaml
